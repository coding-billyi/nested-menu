{"version":3,"sources":["components/App/AppStyles.tsx","providers/MenusProvider.tsx","styles/colors.js","components/Global/Button.tsx","components/Menus/MenusStyles.tsx","components/Modal/ModalStyles.tsx","styles/media-queries.js","components/Modal/Modal.tsx","components/Form/FormStyles.tsx","components/Form/useForm.ts","hooks/useAsync.ts","components/Form/Form.tsx","components/Menus/Menus.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["MenusActionTypes","StyledApp","initialState","activePath","MenusContext","React","displayName","MenusReducer","state","action","type","Click","payload","level","id","newActivePath","length","slice","Cancel","pop","Error","MenusProvider","children","dispatch","Provider","value","grey","buttonVariants","primary","background","colors","secondary","color","Button","padding","border","borderRadius","variant","GlobalButton","isActive","SubMenuUl","Dialog","ReachUIDialog","Close","CloseButton","Title","callAll","fns","args","forEach","fn","ModalContext","Modal","isOpen","setIsOpen","ModalDismissButton","child","onClick","props","ModalOpenButton","ModalContentBase","onClose","onDismiss","ModalContent","title","aria-hidden","Label","Input","Buttons","Message","error","spin","keyframes","transform","Spinner","FaSpinner","animation","defaultProps","useForm","fields","Object","keys","reduce","acc","cur","getInitialData","data","setData","handleChange","key","event","prevData","target","StatusTypes","status","useAsync","useReducer","s","a","safeSetState","isMounted","useRef","useLayoutEffect","current","useCallback","useSafeDispatch","isPending","isResolved","isRejected","run","promise","then","Form","form","endpoint","aria-label","onSubmit","preventDefault","fetch","body","JSON","stringify","method","res","ok","json","statusText","map","label","htmlFor","onChange","disabled","aria-live","role","Menus","menus","list","Menu","context","undefined","useMenus","handleClick","handleClose","includes","aria-haspopup","aria-expanded","aria-controls","SubMenu","data-testid","item","App","styles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13a93703.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const StyledApp = styled.div`\n  max-width: 75%;\n  margin: 10vh auto;\n`;\n","import * as React from 'react';\n\nexport enum MenusActionTypes {\n  Click = 'CLICK',\n  Cancel = 'CANCEL',\n}\n\nconst initialState = {\n  activePath: [],\n};\n\nconst MenusContext = React.createContext({} as MenusContextValue);\nMenusContext.displayName = 'MenusContext';\n\nconst MenusReducer = (state: State, action: Actions) => {\n  switch (action.type) {\n    case MenusActionTypes.Click: {\n      const { activePath } = state;\n\n      const { level, id } = action.payload;\n\n      let newActivePath = [...activePath];\n\n      newActivePath[level] = id;\n\n      if (activePath.length - 1 > level) {\n        newActivePath = newActivePath.slice(0, level + 1);\n      }\n\n      return {\n        activePath: newActivePath,\n      };\n    }\n\n    case MenusActionTypes.Cancel: {\n      const { activePath } = state;\n\n      const newActivePath = [...activePath];\n      newActivePath.pop();\n\n      return {\n        activePath: newActivePath,\n      };\n    }\n    /* istanbul ignore next */\n    default: {\n      throw new Error(`Unhandled action type`);\n    }\n  }\n};\n\nexport const MenusProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = React.useReducer(MenusReducer, initialState);\n\n  return (\n    <MenusContext.Provider value={{ state, dispatch }}>\n      {children}\n    </MenusContext.Provider>\n  );\n};\n\nexport const useMenus = () => {\n  const context = React.useContext(MenusContext);\n  /* istanbul ignore next */\n  if (context === undefined) {\n    throw new Error('useMenus must be used within a MenusProvider');\n  }\n\n  return context;\n};\n\ntype ActionMap<M extends { [index: string]: {} | undefined }> = {\n  [Key in keyof M]: M[Key] extends undefined\n    ? {\n        type: Key;\n      }\n    : {\n        type: Key;\n        payload: M[Key];\n      };\n};\n\ntype State = {\n  activePath: string[];\n};\n\ntype Payload = {\n  [MenusActionTypes.Click]: {\n    level: number;\n    id: string;\n  };\n  [MenusActionTypes.Cancel]: undefined;\n};\n\ntype Actions = ActionMap<Payload>[keyof ActionMap<Payload>];\n\ntype MenusContextValue = {\n  state: State;\n  dispatch: React.Dispatch<Actions>;\n};\n","export const red = '#BE1725';\nexport const grey = '#e4e5e9';\nexport const white = '#FFFFFF';\nexport const black = '#000000';\n","import styled from '@emotion/styled/macro';\nimport * as colors from '../../styles/colors';\n\nconst buttonVariants: ButtonVariant = {\n  primary: {\n    background: colors.grey,\n  },\n  secondary: {\n    background: colors.red,\n    color: colors.white,\n  },\n};\n\nexport const Button = styled.button<ButtonProps>(\n  {\n    padding: '0.5rem 1rem',\n    border: '0',\n    borderRadius: '3px',\n    color: colors.black,\n  },\n  ({ variant = 'primary' }) => buttonVariants[variant],\n);\n\ntype ButtonVariant = {\n  [variant: string]: {};\n};\n\ntype ButtonProps = {\n  variant?: keyof ButtonVariant;\n};\n","import styled from '@emotion/styled/macro';\nimport { Button as GlobalButton } from '../Global/Button';\n\nexport const Button = styled(GlobalButton)<ButtonProps>`\n  margin-bottom: 1rem;\n  color: ${({ isActive }) => (isActive ? 'red' : 'black')};\n`;\n\nexport const SubMenuUl = styled.ul`\n  margin-left: 2rem;\n`;\n\ntype ButtonProps = {\n  isActive: boolean;\n};\n","import styled from '@emotion/styled/macro';\nimport { Dialog as ReachUIDialog } from '@reach/dialog';\nimport * as mq from '../../styles/media-queries';\nimport * as colors from '../../styles/colors';\n\nexport const Dialog = styled(ReachUIDialog)`\n  max-width: 400px;\n  border-radius: 5px;\n  margin: 20vh auto;\n  ${mq.small} {\n    width: 90%;\n    margin: 10vh auto;\n    padding: 1rem;\n  }\n`;\n\nexport const Close = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const CloseButton = styled.button`\n  border-radius: 100%;\n  width: 1.5rem;\n  height: 1.5rem;\n  line-height: 1;\n  border: 1px solid ${colors.grey};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  span {\n    height: 1rem;\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n  font-size: 2rem;\n  margin: 0 1rem 1rem;\n`;\n","export const large = '@media (min-width: 769px)';\nexport const small = '@media (max-width: 768px)';\n","import * as React from 'react';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { GrFormClose } from 'react-icons/gr';\nimport { Dialog, Close, CloseButton, Title } from './ModalStyles';\n\nconst callAll =\n  (...fns: (Function | undefined)[]) =>\n  (...args: unknown[]) =>\n    fns.forEach((fn) => fn && fn(...args));\n\nconst ModalContext = React.createContext({} as ModalContextValue);\n\nexport const Modal: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  return (\n    <ModalContext.Provider value={{ isOpen, setIsOpen }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport const ModalDismissButton: React.FC = ({ children: child }) => {\n  const { setIsOpen } = React.useContext(ModalContext);\n\n  /* istanbul ignore next */\n  if (!React.isValidElement(child)) {\n    return null;\n  } else {\n    return React.cloneElement(child, {\n      onClick: callAll(() => setIsOpen(false), child.props.onClick),\n    });\n  }\n};\n\nexport const ModalOpenButton: React.FC = ({ children: child }) => {\n  const { setIsOpen } = React.useContext(ModalContext);\n  /* istanbul ignore next */\n  if (!React.isValidElement(child)) {\n    return null;\n  } else {\n    return React.cloneElement(child, {\n      onClick: callAll(() => setIsOpen(true), child.props.onClick),\n    });\n  }\n};\n\nexport const ModalContentBase: React.FC<IModalContentBaseProps> = ({\n  onClose,\n  ...props\n}) => {\n  const { isOpen, setIsOpen } = React.useContext(ModalContext);\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onDismiss={callAll(() => setIsOpen(false), onClose)}\n      {...props}\n    />\n  );\n};\n\nexport const ModalContent: React.FC<IModalContentProps> = ({\n  title,\n  children,\n  onClose,\n  ...props\n}) => {\n  return (\n    <ModalContentBase onClose={onClose} {...props}>\n      <Close>\n        <ModalDismissButton>\n          <CloseButton onClick={onClose}>\n            <VisuallyHidden>Close</VisuallyHidden>\n            <span aria-hidden>\n              <GrFormClose />\n            </span>\n          </CloseButton>\n        </ModalDismissButton>\n      </Close>\n      <Title>{title}</Title>\n      {children}\n    </ModalContentBase>\n  );\n};\n\ntype ModalContextValue = {\n  isOpen: boolean;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\ninterface IModalContentBaseProps {\n  onClose?: () => void;\n}\n\ninterface IModalContentProps extends IModalContentBaseProps {\n  title: string;\n}\n","import styled from '@emotion/styled/macro';\nimport { keyframes } from '@emotion/react/macro';\nimport { FaSpinner } from 'react-icons/fa';\n\nexport const Label = styled.label`\n  margin-bottom: 0.5rem;\n  display: block;\n  &:last-of-type {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 0.25rem 0.5rem;\n`;\n\nexport const Buttons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(0, 1fr));\n  column-gap: 1rem;\n`;\n\nexport const Message = styled.span<MessageProps>`\n  display: block;\n  margin-top: 1rem;\n  color: ${({ error }) => (error ? 'red' : 'black')};\n`;\n\nconst spin = keyframes({\n  '0%': { transform: 'rotate(0deg)' },\n  '100%': { transform: 'rotate(360deg)' },\n});\n\nexport const Spinner = styled(FaSpinner)({\n  animation: `${spin} 1s linear infinite`,\n});\nSpinner.defaultProps = {\n  'aria-label': 'loading',\n};\n\ntype MessageProps = {\n  error?: boolean;\n};\n","import * as React from 'react';\nimport { IFields } from '../../interface/IForm';\n\nconst getInitialData = (fields: IFields) =>\n  Object.keys(fields).reduce(\n    (acc, cur) => ({\n      ...acc,\n      [cur]: '',\n    }),\n    {},\n  );\n\nexport const useForm = (fields: IFields) => {\n  const [data, setData] = React.useState<KeysEnum<IFields>>(\n    getInitialData(fields),\n  );\n\n  const handleChange = React.useCallback(\n    (key: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      setData((prevData) => ({\n        ...prevData,\n        [key]: event.target.value,\n      }));\n    },\n    [],\n  );\n\n  return {\n    data,\n    handleChange,\n  };\n};\n\ntype KeysEnum<T> = { [P in keyof Required<T>]: string | number };\n","import React from 'react';\n\nfunction useSafeDispatch(dispatch: React.Dispatch<Partial<State>>) {\n  const isMounted = React.useRef(false);\n  React.useLayoutEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  return React.useCallback(\n    (args) => (isMounted.current ? dispatch(args) : void 0),\n    [dispatch],\n  );\n}\n\nconst initialState: State = { status: 'idle', data: null, error: null };\n\nfunction useAsync() {\n  const [{ status, data, error }, setState] = React.useReducer(\n    (s: State, a: Partial<State>) => ({ ...s, ...a }),\n    initialState,\n  );\n\n  const safeSetState = useSafeDispatch(setState);\n\n  const run = React.useCallback(\n    (promise: Promise<unknown>) => {\n      safeSetState({ status: 'pending' });\n      return promise.then(\n        (data: unknown) => {\n          safeSetState({ data, status: 'resolved' });\n          return data;\n        },\n        (error: unknown) => {\n          safeSetState({ status: 'rejected', error });\n          return error;\n        },\n      );\n    },\n    [safeSetState],\n  );\n\n  return {\n    isPending: status === 'pending',\n    isResolved: status === 'resolved',\n    isRejected: status === 'rejected',\n    error,\n    status,\n    data,\n    run,\n  };\n}\n\nexport { useAsync };\n\nenum StatusTypes {\n  idle,\n  pending,\n  resolved,\n  rejected,\n}\n\ntype State = {\n  status: keyof typeof StatusTypes;\n  data: null | unknown;\n  error: null | unknown;\n};\n","import * as React from 'react';\nimport { IForm } from '../../interface/IForm';\nimport { ModalDismissButton } from '../Modal/Modal';\nimport { Label, Input, Message, Spinner, Buttons } from './FormStyles';\nimport { Button } from '../Global/Button';\nimport { useForm } from './useForm';\nimport { useAsync } from '../../hooks/useAsync';\n\nexport const Form: React.FC<FormProps> = ({ form, onClose }) => {\n  const { title, endpoint, fields } = form;\n  const { data, handleChange } = useForm(fields);\n  const { isPending, isResolved, isRejected, run } = useAsync();\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    run(\n      fetch(endpoint, {\n        body: JSON.stringify(data),\n        method: 'POST',\n      }).then((res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        } else {\n          return res.json();\n        }\n      }),\n    );\n  };\n  return (\n    <>\n      <form aria-label={title} onSubmit={handleSubmit}>\n        {Object.keys(fields).map((key) => {\n          const { label, type } = fields[key];\n          return (\n            <Label key={key} htmlFor={`${key}-field`}>\n              {label}\n              <Input\n                id={`${key}-field`}\n                type={type}\n                //@TODO: issues with dynamic form field testing for controlled form.\n                // value={data[key]}\n                onChange={handleChange(key)}\n              />\n            </Label>\n          );\n        })}\n        <Buttons>\n          <Button type=\"submit\" disabled={isPending}>\n            {isPending ? <Spinner /> : 'Submit'}\n          </Button>\n          <ModalDismissButton>\n            <Button type=\"button\" variant={'secondary'} onClick={onClose}>\n              Cancel\n            </Button>\n          </ModalDismissButton>\n        </Buttons>\n      </form>\n\n      {isResolved && (\n        <div aria-live=\"polite\">\n          <Message>Success</Message>\n        </div>\n      )}\n\n      {isRejected && (\n        <div role=\"alert\">\n          <Message error>Something went wrong, please try later</Message>\n        </div>\n      )}\n    </>\n  );\n};\n\ntype FormProps = {\n  form: IForm;\n  onClose: () => void;\n};\n","import {\n  MenusProvider,\n  useMenus,\n  MenusActionTypes,\n} from '../../providers/MenusProvider';\nimport { Button, SubMenuUl } from './MenusStyles';\nimport { IMenu } from '../../interface/IMenu';\nimport { Modal, ModalContent, ModalOpenButton } from '../Modal/Modal';\nimport { Form } from '../Form/Form';\n\nexport const Menus: React.FC<MenusProps> = ({ menus }) => (\n  <MenusProvider>\n    <nav>\n      <ul role=\"menu\">\n        {menus.map((list) => (\n          <li role=\"menuitem\" key={list.id}>\n            <Menu list={list} level={0} />\n          </li>\n        ))}\n      </ul>\n    </nav>\n  </MenusProvider>\n);\n\nconst Menu: React.FC<MenuProps> = ({ list, level }) => {\n  const {\n    state: { activePath },\n    dispatch,\n  } = useMenus();\n\n  const handleClick = (level: number, id: string) => {\n    dispatch({ type: MenusActionTypes.Click, payload: { level, id } });\n  };\n\n  const handleClose = () => {\n    dispatch({ type: MenusActionTypes.Cancel });\n  };\n\n  const isActive = activePath.includes(list.id);\n  const hasChild = list.children.length > 0;\n\n  if (hasChild) {\n    return (\n      <>\n        <Button\n          aria-haspopup=\"menu\"\n          aria-expanded={isActive}\n          aria-controls={list.id}\n          onClick={() => handleClick(level, list.id)}\n          isActive={isActive}\n        >\n          {list.title}\n        </Button>\n        {isActive ? <SubMenu list={list} level={level} /> : null}\n      </>\n    );\n  }\n\n  if (list.form) {\n    return (\n      <Modal>\n        <ModalOpenButton>\n          <Button\n            aria-haspopup=\"dialog\"\n            aria-expanded={isActive}\n            onClick={() => handleClick(level, list.id)}\n            isActive={isActive}\n          >\n            {list.title}\n          </Button>\n        </ModalOpenButton>\n        <ModalContent\n          title={list.form.title}\n          aria-label={list.form.title}\n          onClose={handleClose}\n        >\n          <Form form={list.form} onClose={handleClose} />\n        </ModalContent>\n      </Modal>\n    );\n  }\n\n  return (\n    <Modal>\n      <ModalOpenButton>\n        <Button\n          aria-haspopup=\"dialog\"\n          aria-expanded={isActive}\n          onClick={() => handleClick(level, list.id)}\n          isActive={isActive}\n        >\n          {list.title}\n        </Button>\n      </ModalOpenButton>\n      <ModalContent title={'Error'} aria-label={'error'} onClose={handleClose}>\n        <div role=\"document\">\n          <p>This hasn't been implemented yet. Please try another menu item</p>\n        </div>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nconst SubMenu: React.FC<MenuProps> = ({ list, level }) => (\n  <SubMenuUl\n    role=\"menu\"\n    data-testid={`submenu-${list.title}`}\n    aria-label={list.title}\n    id={list.id}\n  >\n    {list.children.map((item) => (\n      <li role=\"menuitem\" key={item.id}>\n        <Menu list={item} level={level + 1} />\n      </li>\n    ))}\n  </SubMenuUl>\n);\n\ntype MenusProps = {\n  menus: IMenu[];\n};\n\ntype MenuProps = {\n  list: IMenu;\n  level: number;\n};\n","import { Global, css } from '@emotion/react/macro';\nimport { menus } from '../../data.json';\n\nimport { StyledApp } from './AppStyles';\nimport { Menus } from '../Menus/Menus';\n\nexport const App = () => (\n  <>\n    <Global\n      styles={css`\n        *,\n        *::before,\n        *::after {\n          box-sizing: border-box;\n        }\n        ul {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n      `}\n    />\n    <StyledApp>\n      <header>\n        <h1>Coding Test</h1>\n        <Menus menus={menus} />\n      </header>\n    </StyledApp>\n  </>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport '@reach/dialog/styles.css';\nimport { App } from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}